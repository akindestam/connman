Background
==========

- Priority scale: High, Medium and Low

- Complexity scale: C1, C2, C4 and C8.
   The complexity scale is exponential, with complexity 1 being the
   lowest complexity. Complexity is a function of both task 'complexity'
   and task 'scope'.

Core
====

- connman_element removal

   Priority: Low
   Complexity: C8
   Owner: Samuel Ortiz <sameo@linux.intel.com>


- VPNc

   Priority: Low
   Complexity: C2


- WiFi tethering
   Priority: Medium
   Complexity: C4

   WiFi tethering should be done through an extended wpa_supplicant
   D-Bus API, as STA and AP modes are typically mutually exclusive.


- Session API implementation

   Priority: High
   Complexity: C4
   Owner: Daniel Wagner <daniel.wagner@bmw-carit.de>
   Owner: Samuel Ortiz <sameo@linux.intel.com>

   The session API should provide a connection abstraction in order to
   prioritize applications network accesses, prevent or allow network
   and bearer roaming, or provide applications with a way to request
   for periodic network connections. On-demand connections will be
   implemented through this API as well.
   See http://www.mail-archive.com/connman@connman.net/msg01653.html


- Provisioning D-Bus API

   Priority: Medium
   Complexity: C2
   Owner: Henri Bragge <henri.bragge@ixonos.com>

   The current service provisioning lacks a D-Bus interface for modifying
   existing configurations.


- WiSPR support

   Priority: Medium
   Complexity: C4
   Owner: Marcel Holtmann <marcel@holtmann.org>

   Based on the portal detection parsing results, and provisioned
   credentials, ConnMan should be able to initiate a WiSPR authentication.


- IPv6 enhancements

   Priority: High
   Complexity: C8
   Owner: Jukka Rissanen <jukka.rissanen@nokia.com>

   Support IPv6 only networks so that system can go online even if
   there is no IPv4 address. Also support more than one IPv6 address
   in one device so that the addresses are reported correctly via
   dbus interface. The autoconf IPv6 addresses need also some tweaking
   so that system will go online properly.


WiFi
====

- Ad-Hoc support

   Priority: Medium
   Complexity: C2
   Dependencies: Core:IPv4LL
   Owner: Samuel Ortiz <sameo@linux.intel.com>


- Fast Connect

   Priority: Low
   Complexity: C4
   Owner: Samuel Ortiz <sameo@linux.intel.com>


- EAP-AKA/SIM

   Priority: Medium
   Complexity: C2
   Owner: Samuel Ortiz <sameo@linux.intel.com>

   This EAP is needed for SIM card based network authentication.
   ConnMan here plays a minor role: Once wpa_supplicant is set up for
   starting and EAP-AKA/SIM authentication, it will talk to a SIM card
   through its pcsc-lite API.


- EAP-FAST

   Priority: Low
   Complexity: C1
   Owner: Henri Bragge <henri.bragge@ixonos.com>


- EAP-GTC

   Priority: Low
   Complexity: C1
   Owner: Henri Bragge <henri.bragge@ixonos.com>


- WiFi p2p

   Priority: Medium
   Complexity: C2


Bluetooth
=========

- DUN client

   Priority: Low
   Complexity: C4


- DUN server

   Priority: Low
   Complexity: C4
